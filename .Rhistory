library(Rling)
library(party)
library(readxl)
# Pegue as tabelas do excel.
# Obs: Nesse caso, pulei ("skip") a primeira linha das tabelas.
contrucoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 1)
getwd()
setwd(..)
setwd("..")
getwd()
# Pegue as tabelas do excel.
# Obs: Nesse caso, pulei ("skip") a primeira linha das tabelas.
contrucoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 1)
construcoes
construcoes
# Pegue as tabelas do excel.
# Obs: Nesse caso, pulei ("skip") a primeira linha das tabelas.
contrucoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 1)
construcoes
# Pegue as tabelas do excel.
# Obs: Nesse caso, pulei ("skip") a primeira linha das tabelas.
construcoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 1)
construcoes
# Pegue as tabelas do excel.
# Obs: Nesse caso, pulei ("skip") a primeira linha das tabelas.
construcoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 0)
construcoes
# Renomeia as colunas da tabela
colnames(construcoes)[1] <- "Construcao"
construcoes
colnames(construcoes)[1] <- "Construcao"
colnames(construcoes)[2] <- "Dominio"
colnames(construcoes)[3] <- "Estado"
colnames(construcoes)[4] <- "Desfoque"
colnames(construcoes)[5] <- "Ameaca"
colnames(construcoes)[6] <- "Ilocucao"
construcoes
construcoes$Construcao
construcoes["Construcao"]
construcoes[1]
# Cria um factor para estabelecer as "categorias" possíveis de cada coluna da tabela
construcoes$Construcao <- factor(construcoes$Construcao)
construcoes$Construcao
construcoes$Construcao
# Cria um factor para estabelecer as "categorias" possíveis de cada coluna da tabela
construcoes$Construcao <- factor(construcoes$Construcao)
summary(construcoes)
construcoes["Construção"] <- factor(construcoes["Construção"])
# Renomeia as colunas da tabela
colnames(construcoes)[1] <- "Construção"
construcoes["Construção"] <- factor(construcoes["Construção"])
summary(construcoes)
construcoes["Dominio"] <- factor(construcoes["Dominio"])
summary(construcoes)
construcoes$Construção
colnames(construcoes)[2] <- "Domínio"
construcoes$Domínio
construcoes$Domínio
# Pegue as tabelas do excel.
# Obs: Nesse caso, eu não pulei ("skip") nenhuma linha na tabela.
construcoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 0)
colnames(construcoes)[1] <- "Construção"
colnames(construcoes)[2] <- "Domínio"
colnames(construcoes)[3] <- "Estado"
colnames(construcoes)[4] <- "Desfoque"
colnames(construcoes)[5] <- "Ameaca"
colnames(construcoes)[6] <- "Ilocucao"
construcoes$Domínio
construcoes$Domínio
colnames(construcoes)[1] <- "Construção"
colnames(construcoes)[2] <- "Domínio"
colnames(construcoes)[3] <- "Estado"
colnames(construcoes)[4] <- "Desfoque"
colnames(construcoes)[5] <- "Ameaça"
colnames(construcoes)[6] <- "Ilocução"
construcoes$Construção <- factor(construcoes$Construção)
construcoes$Domínio <- factor(construcoes$Domínio)
construcoes$Estado <- factor(construcoes$Estado)
construcoes$Desfoque <- factor(construcoes$Desfoque)
construcoes$Ameaça <- factor(construcoes$Ameaça)
construcoes$Ilocução <- factor(construcoes$Ilocução)
summary(construcoes)
summary(construcoes$Ilocução)
clear
summary(construcoes$Construção)
set.seed(247)
dependencia <- Construção ~ Domínio + Estado + Desfoque + Ameaça + Ilocução
arvore_construcoes <- ctree(dependencia, data = construcoes)
plot(arvore_construcoes)
summary(construcoes$Ilocução)
summary(construcoes$Construção)
summary(construcoes)
# Pegue as tabelas do excel.
# Obs: Nesse caso, eu não pulei ("skip") nenhuma linha na tabela.
construcoes <- read_excel(path = "Eneile/codificação específica para R.xlsx", skip = 0)
colnames(construcoes)[1] <- "Construção"
colnames(construcoes)[2] <- "Domínio"
colnames(construcoes)[3] <- "Estado"
colnames(construcoes)[4] <- "Desfoque"
colnames(construcoes)[5] <- "Ameaça"
colnames(construcoes)[6] <- "Ilocução"
construcoes$Construção <- factor(construcoes$Construção)
construcoes$Domínio <- factor(construcoes$Domínio)
construcoes$Estado <- factor(construcoes$Estado)
construcoes$Desfoque <- factor(construcoes$Desfoque)
construcoes$Ameaça <- factor(construcoes$Ameaça)
construcoes$Ilocução <- factor(construcoes$Ilocução)
summary(construcoes)
set.seed(247)
dependencia <- Construção ~ Domínio + Estado + Desfoque + Ameaça + Ilocução
arvore_construcoes <- ctree(dependencia, data = construcoes)
plot(arvore_construcoes)
get_wd()
getwd()
library(swirlify)
getwd()
get_current_lesson()
new_lesson("Sequência do Teste", "Análise Colostrucional no R")
set_lesson()
add_to_manifest()
setAs()
set_lesson()
add_to_manifest("Sequência do Teste")
help(add_to_manifest)
set_lesson()
add_to_manifest()
set_lesson()
swirlify()
swirl()
swirlify()
swirlify()
test_lesson()
new_lesson("Teste", "Análise Colostrucional no R")
test_lesson()
new_lesson("Teste", "Normal")
test_lesson()
new_lesson("Teste", "Normal ok?")
new_lesson("Teste", "Normal ok")
test_lesson()
new_lesson("Teste", "Normal ók")
test_lesson()
test_lesson()
set_lesson()
test_lesson()
test_lesson()
demo_lesson()
add_to_manifest()
demo_lesson()
demo_lesson()
add_to_manifest()
demo_lesson()
help(demo_lesson)
help(lesson)
lesson()
swirlify()
wq_command()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
demo_lesson()
abc <- 2
soma <- 7+8
soma <- 7 + 8
soma <- 10 + 5
soma = 10+5
?omnitest
demo_lesson()
soma <- 14
demo_lesson()
cabo <- 10 + 5
cabo
soma <- 10+5
soma
demo_lesson()
soma <- 15
soma <- 10 + 5
soma = soma + 5
soma = soma + 50
demo_lesson()
soma <- 10 + 5
soma = soma + 50
demo_lesson()
soma <- 10 + 5
soma=soma+14
soma
soma=soma+50
soma
demo_lesson()
demo_lesson()
demo_lesson()
soma <- 10 + 5
soma=soma+50
demo_lesson()
library(swirlify)
demo_lesson()
soma <- 10 + 5
soma=soma+50
library(swirlify)
new_lesson("Despedida", "Análise_Colostrucional_no_R/")
add_to_manifest()
demo_lesson()
demo_lesson()
nxt()
test_course()
add_license()
swirl()
library(swirl)
swirl()
nxt()
soma <- 10 + 5
soma <- soma + 50
nxt()
swirl()
1
skip()
skip()
nxt()
swirl()
swirl()
swirlify()
get_lesson()
set_lesson()
test_lesson()
demo_lesson()
swirl()
remove.packages("writexl").
remove.packages("writexl")
installed.packages()
installed.packages()[,1]
installed.packages()[,1]
swirlify()
library(swirlify)
demo_lesson()
testando
testando <- 4
valor<-14
57->valor
banana <- 4
install.packages(writexl)
install.packages("writexl")
demo_lesson(from=7)
banana <- 15
demo_lesson(from=6)
teste <- 57
valor <- 57
abacaxi
abacaxi <- 15
max(5,14,20)
demo_lesson(from=10)
a <- 2
demo_lesson(from=10)
pacotes <- installed.packages()
pacotes
pacotes[Package=="writexl",]
pacotes[Package="writexl",]
pacotes[Package="writexl",]
pacotes[Package="writexl",Priority]
pacotes[Package="writexl",Priority="NA"]
pacotes[Package="writexl", Priority]
pacotes[Package="writexl","Priority"]
pacotes[Package="writexl","Priority"] == "base"
pacotes[Package="writexl","Priority"] == NA
pacotes[Package="writexl","Priority"]
var <- pacotes[Package="writexl","Priority"]
var
var == "base"
is.element(var, "base")
is.element(var, NA)
pacotes[Package="realmente", "Priority"]
pacotes[Package="realmente"]
?installed.packages()
installed.packages()[Package="writexl"]
installed.packages()
installed.packages()[,1]
pacotes <- installed.packages()[,1]
correto <- is.element("writexl", pacotes)
correto
installed.packages()[Package="writexl"]
installed.packages()[Package="writexl",]
installed.packages()[Package="teste",]
installed.packages()[Package="realmente",]
demo_lesson(from=12)
demo_lesson(from=10)
abacaxi <- 15
laranja <- 6
library(writexl)
library(writexl)
installed.packages()[Package="writexl", "Priority"]
installed.packages()[Package="writexl", ]
installed.packages()[Package="writexl", "Priority"]
library(writexl)
library(writexl)
skip()
skip
testa_writexl_carregado()
bye()
0
info()
info()
library(swirlify)
library(readxl)
library(writexl)
library(collostructions)
demo_lesson()
add_to_manifest()
demo_lesson()
dados_collexcovar <- read_excel(file.choose())
dados_collexcovar <- read_excel(file.choose())
analise.covar <- collex.covar(dados_collexcovar)
View(analise.covar)
write_xlsx(analise.covar, file.choose())
demon_lesson("Despedida")
test_lesson("Despedida")
test_course()
test_course()
getwd()
setwd("An-lise-Colostrucional-no-R/")
add_to_manifest("Analise_Colostrucional_no_R/Introdução_à_Análise_Colostrucional/")
demo_lesson()
get_current_lesson()
set_lesson("Analise_Colostrucional_no_R/Introdução_à_Análise_Colostrucional/")
set_lesson("Analise_Colostrucional_no_R/Introdução_à_Análise_Colostrucional/lesson.yaml")
get_current_lesson()
add_to_manifest()
demo_lesson()
demo_lesson()
set_lesson("Analise_Colostrucional_no_R/Introdução_à_Linguagem_R/lesson.yaml")
get_current_lesson()
add_to_manifest()
demo_lesson()
carro <- 13
valor <- 57
abacaxi <- 15
laranja <- 6
set_lesson("Analise_Colostrucional_no_R/Pacotes_Necessários_para_a_Análise/lesson.yaml")
add_to_manifest()
demo_lesson()
manga <- 10
tomate <- 20
morango <- 2
melancia <- 1
batata <- 9
uva <- 0
set_lesson("Analise_Colostrucional_no_R/Análise_de_Colexemas_Simples/lesson.yaml")
get_current_lesson()
add_to_manifest()
demo_lesson()
a
library(readxl)
dados_collex <- read_excel("~/Programação R/An-lise-Colostrucional-no-R/Analise_Colostrucional_no_R/Despedida/dados_collex.xlsx")
View(dados_collex)
?collex
analise.simples <- collex(dados_collex, corpsize=50000)
a
analise.simples <- collex(dados_collex)
View(analise.simples)
write_xlsx(analise.simples, file.choose())
set_lesson("Analise_Colostrucional_no_R/Análise_de_Colexemas_Distintivos/lesson.yaml")
add_to_manifest()
demo_lesson()
read_excel(file.choose())
dados_collexdist <- read_excel(file.choose())
analise.dist <- collex.dist(dados_collexdist)
View(analise.dist)
write_xlsx(analise.dist, file.choose())
set_lesson("Analise_Colostrucional_no_R/Análise_de_Colexemas_Covariantes/lesson.yaml")
add_to_manifest()
set_lesson("Analise_Colostrucional_no_R/Despedida/lesson.yaml")
add_to_manifest()
demo_lesson()
demo_lesson()
nxt()
skip()
n
demo_lesson()
analise.simples <- collex(dados_collex, corpsize=50000)
analise.simples <- collex(x = dados_collex, corpsize=50000)
analise.simples <- collex(x = dados_collex, 50000)
analise.simples <- collex(dados_collex, 50000)
analise.simples <- collex(dados_collex, 1e+08L)
analise.simples <- collex(dados_collex, 5*1e+04L)
analise.simples <- collex(dados_collex, 1e+04L)
analise.simples <- collex(dados_collex, 1e+05L)
analise.simples <- collex(dados_collex, 1e+06L)
analise.simples <- collex(dados_collex, 1e+07L)
analise.simples <- collex(dados_collex, 1e+08L)
analise.simples <- collex(dados_collex, 1e+09L)
analise.simples <- collex(dados_collex, 1e+05L)
rm(analise.simples)
analise.simples <- collex(dados_collex, 1e+05L)
analise.simples <- collex(dados_collex, 1e+08L)
