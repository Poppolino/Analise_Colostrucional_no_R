- Class: meta
  Course: Analise Colostrucional no R
  Lesson: Introdução à Linguagem R
  Author: Mariana Gonçalves e Pedro Poppolino
  Type: Standard
  Organization: Projeto Predicar - UFRJ
  Version: 2.4.5


# Questão 1: Mensagem de texto comum 
- Class: text
  Output: "A linguagem R é uma linguagem de programação voltada para análises estatísticas de dados, sendo desenvolvida para ser de fácil utilização. Basicamente, uma linguagem de programação traduz para o computador os algoritmos (receitas) que queremos que ele realize."


# Questão 2: Mensagem de texto comum 
- Class: text
  Output: "Para seguir uma receita, ele precisará realizar uma sequência de etapas, manipulando um conjunto de dados, até chegar no resultado desejado. Na nossa aplicação, trabalharemos com dois tipos de dados: numéricos e textuais."
  

# Questão 3: Mensagem de texto comum 
- Class: text
  Output: "O tipo numérico diz respeito aos números reais, como: 42, 2.7, -3.\n\nJá os dados textuais fazem referência a letras, palavras e frases. Vale ressaltar que os dados textuais devem vir entre aspas simples ou duplas: 'a', \"palavra\", \"Exemplo de frase\"."


# Questão 4: Mensagem de texto comum 
- Class: text
  Output: "Para armazenarmos os dados de processamentos ou buscas, e conseguirmos manipulá-los, precisamos guardá-los em \"recipientes\" que chamaremos de variáveis ou objetos. Esses objetos podem ser estruturados das mais variadas formas, desde uma simples \"caixa\" até estruturas mais complexas, como tabelas (que são chamadas de \"dataframes\" no R)."
  

# Questão 5: Mensagem de texto comum 
- Class: text
  Output: "Podemos nomear esses objetos como quisermos, mas é uma boa prática darmos nomes elucidativos para eles. Para atribuir valores a um objeto, basta digitar uma seta (<- ou ->) na direção dele, como a seguir:\n\nobjeto <- \"exemplo\" ou \"exemplo\" -> objeto."
 

# Questão 6: Teste de comando
- Class: cmd_question
  Output: "Vamos testar essa operação! Acrescente o valor numérico 57 ao objeto de nome \"valor\"."
  CorrectAnswer: valor <- 57
  AnswerTests: any_of_exprs('valor <- 57', '57 -> valor')
  Hint: "Tente fazer algo como: valor <- [NUMERO]"


# Questão 7: Mensagem de texto comum 
- Class: text
  Output: "Muito bem! Continuemos a lição. \n\nPara executar uma funcionalidade dentro do R, recorremos às funções. Semelhantes às funções matemáticas, elas podem receber valores como parâmetro, assim como retornar algum valor após a sua execução. A sintaxe das funções é formada pelo nome da função seguido de parênteses, que envolvem os argumentos passados."
  

# Questão 8: Mensagem de texto comum 
- Class: text
  Output: "Por exemplo, a função max() retorna o maior número passado por parâmetro. Se fizermos: \n\nmaior_valor <- max(5, 14, 20)\n\n o objeto \"maior_valor\" receberá o número 20. Perceba que também podemos passar objetos como argumentos de funções."


# Questão 9: Mensagem de texto comum 
- Class: text
  Output: "Quando quisermos alguma funcionalidade que não exista por padrão no R, podemos instalar um pacote externo de funções que atenda às nossas necessidades. Para instalar um pacote, basta usar a função install.packages() contendo o nome do pacote desejado entre aspas."


# Questão 10: Teste de comando
- Class: cmd_question
  Output: "Tente instalar o pacote writexl, para escrita em planilhas do Excel. Ou execute um comando qualquer, como abacaxi <- 15, caso já tenha instalado.\n\nObs: A instalação pode demorar um pouco."
  CorrectAnswer: install.packages("writexl")
  AnswerTests: testa_writexl_instalado()
  Hint: "Use o comando install.packages() com \"writexl\" dentro dos parênteses." 


# Questão 11: Mensagem de texto comum 
- Class: text
  Output: "Isso aí!\n\nApesar de termos instalado um pacote, ele não fica pronto para uso por padrão. É necessário carregar o pacote no R para que possamos utilizar as suas funções. Dessa forma, carregamos os pacotes por meio da função library(), passando como argumento o nome do pacote que desejamos utilizar (sem as aspas)."


# Questão 12: Teste de comando
- Class: cmd_question
  Output: "Agora abra o pacote writexl, instalado anteriormente. Caso já o tenha carregado, execute um comando qualquer, como laranja <- 6."
  CorrectAnswer: library(writexl)
  AnswerTests: testa_writexl_carregado()
  Hint: "Use o comando library() com writexl dentro dos parênteses."


# Questão 13: Mensagem de texto comum 
- Class: text
  Output: "Ótimo, agora podemos partir para a Análise Colostrucional!"


